
:host {
  --primary-color: var(--design-primary-color, var(--panel-primary-color));
  --button-primary-text-color: var(
    --design-primary-text-color,
    var(--panel-on-primary-color)
  );
  --background-text-color: var(
    --design-background-text-color,
    var(--panel-on-background-color)
  );
  --surface-color: var(--design-surface-color, var(--panel-surface-color));
  --surface-text-color: var(
    --design-surface-text-color,
    var(--panel-on-surface-color)
  );
}


.dndflow .reactflow-wrapper {
  flex-grow: 1;
  height: 100%;
}
 
.dndflow .selectall {
  margin-top: 10px;
}
 
@media screen and (min-width: 768px) {
  .dndflow {
    flex-direction: row;
  }
 
  .dndflow aside {
    width: 20%;
    max-width: 250px;
  }
}
.nodes-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 10px;
    position: relative; /* Required for absolute positioning of the pseudo-element */
    padding-top: 10px; /* Add some space for the line */
}


.node-palette {
    padding-left: 10px; 
    padding-top: 10px; /* Add some space for the line */
    position: relative;
}

.node-palette::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 2px; /* Width of the line */
    background-color: var(--primary-color); /* Color of the line */
}


/* Colors of the items in sidebar */
.dndnode {
  padding: 10px;
  border-radius: 3px;
  min-width: 150px;
  font-size: 12px;
  color: var(--surface-color);
  text-align: center;
  justify-content: center; /* Center the nodes horizontally */
  border-width: 1px;
  border-style: solid;
  border-color: var(--xy-node-border, var(--xy-node-border-default));
  background-color: var(--primary-color);
  width: 80%; 
}


/* Updating controls and minimap to match with panel */
.react-flow__controls-button {
    background: var(--primary-color);
    color: var(--surface-color);
    border-bottom: 1px solid
      var(--surface-color);
  }


  
.react-flow__minimap {
  background: var(--surface-color);
}
.react-flow__minimap-mask {
    fill: color-mix(in srgb, var(--primary-color) 6%, var(--surface-color) 94%);
  }
.react-flow__minimap-node {
    fill: color-mix(in srgb, var(--primary-color) 15%, var(--surface-color) 85%);
  }